# Generated by Django 4.1 on 2022-08-23 14:43

import authboard.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='가입날짜')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='수정날짜')),
                ('email', models.EmailField(max_length=50, unique=True, verbose_name='이메일')),
                ('name', models.CharField(max_length=5, verbose_name='이름')),
                ('password', models.CharField(max_length=100, verbose_name='패스워드')),
                ('birth_day', models.DateField(help_text='ex)1995-08-01', verbose_name='생년월일')),
                ('is_active', models.BooleanField(default=True)),
                ('is_admin', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'admin_auth',
            },
            managers=[
                ('objects', authboard.models.UserManage()),
            ],
        ),
    ]
